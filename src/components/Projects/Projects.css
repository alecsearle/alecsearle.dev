:root {
  --hue: 27;
  --sat: 69%;
  --white: hsl(0, 0%, 100%);
  --purple-primary: #2a9d8f;
  --purple-glow: rgba(42, 157, 143, 0.3);
  --purple-border: rgba(42, 157, 143, 0.8);
  --border-color: rgba(42, 157, 143, 0.3);
  --background-dark: #060010f1;
  color-scheme: light dark;
}

.projects {
  color: white;
  padding: 0rem 4rem;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.projects h1 {
  font-size: 3rem;
  font-weight: 300;
  margin: 0 0 2rem 0;
  color: white;
  letter-spacing: -0.02em;
  align-self: flex-start;
}

.line {
  height: 3px;
  background: linear-gradient(90deg, var(--primary-color), transparent);
  margin: 2rem 0;
  border-radius: 2px;
  width: 100px;
  align-self: flex-start;
}

.card-grid {
  display: grid;
  gap: 1rem;
  padding: 2rem 0;
  width: 100%;
  max-width: 1200px;
  font-size: clamp(1rem, 0.9rem + 0.5vw, 1.5rem);
}

.card {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  position: relative;
  aspect-ratio: 4/3;
  min-height: 200px;
  width: 100%;
  max-width: 100%;
  padding: 1.25em;
  border-radius: 20px;
  background: var(--background-dark);
  font-weight: 300;
  overflow: hidden;
  transition: all 0.5s ease;
  cursor: pointer;

  /* Background image properties */
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;

  --glow-x: 50%;
  --glow-y: 50%;
  --glow-intensity: 0;
  --glow-radius: 200px;
}

/* Dark overlay for better text readability */
.card::before {
  content: "";
  position: absolute;
  inset: 0; /* Use inset instead of individual positioning */
  background: var(--background-dark); /* Solid background instead of gradient */
  z-index: 1;
  border-radius: 20px;
  transition: all 0.5s ease;
}

.card:hover::before {
  opacity: 0;
}

/* Optional: Add a class for cards without images to keep the dark background */
.card--no-image::before {
  background: linear-gradient(
    135deg,
    rgba(6, 0, 16, 0.95) 0%,
    rgba(6, 0, 16, 0.98) 50%,
    rgba(6, 0, 16, 1) 100%
  );
}

.card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.card[style*="cursor: pointer"]:hover {
  transform: translateY(-4px);
  box-shadow: 0 12px 30px rgba(0, 0, 0, 0.2);
}

.card__header,
.card__content {
  display: flex;
  position: relative;
  color: var(--white);
  z-index: 2; /* Ensure content is above overlay */
  transition: opacity 0.5s ease;
}

.card:hover .card__header,
.card:hover .card__content {
  opacity: 0;
}

.card__header {
  gap: 0.75em;
  justify-content: space-between;
}

.card__content {
  flex-direction: column;
}

.card__label {
  font-size: 16px;
  background: rgba(42, 157, 143, 0.2);
  padding: 0.25em 0.75em;
  border-radius: 12px;
  border: 1px solid rgba(42, 157, 143, 0.3);
  backdrop-filter: blur(10px);
  font-weight: 500;
  width: fit-content;
}

.card__title,
.card__description {
  --clamp-title: 1;
  --clamp-desc: 2;
}

.card__title {
  font-weight: 600;
  font-size: 18px;
  margin: 0 0 0.25em;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.7);
}

.card__description {
  font-size: 14px;
  line-height: 1.4;
  opacity: 0.9;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7);
}

.card--text-autohide .card__title,
.card--text-autohide .card__description {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

.card--text-autohide .card__title {
  -webkit-line-clamp: var(--clamp-title);
  line-clamp: var(--clamp-title);
}

.card--text-autohide .card__description {
  -webkit-line-clamp: var(--clamp-desc);
  line-clamp: var(--clamp-desc);
}

@media (max-width: 768px) {
  .projects {
    padding: 2rem 2rem;
  }

  .projects h1 {
    font-size: 2.5rem;
    text-align: center;
    align-self: center;
  }

  .line {
    align-self: center;
  }

  .card-grid {
    grid-template-columns: 1fr;
    width: 100%;
    gap: 1rem;
    padding: 1rem 0;
  }

  .card {
    width: 100%;
    min-height: 180px;
  }
}

@media (min-width: 600px) {
  .card-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 1024px) {
  .card-grid {
    grid-template-columns: repeat(4, 1fr);
  }

  .card:nth-child(3) {
    grid-column: span 2;
    grid-row: span 2;
  }

  .card:nth-child(4) {
    grid-column: 1 / span 2;
    grid-row: 2 / span 2;
  }

  .card:nth-child(6) {
    grid-column: 4;
    grid-row: 3;
  }
}

/* Border glow effect */
.card--border-glow::after {
  content: "";
  position: absolute;
  inset: 0;
  padding: 6px;
  background: radial-gradient(
    var(--glow-radius) circle at var(--glow-x) var(--glow-y),
    rgba(132, 0, 255, calc(var(--glow-intensity) * 0.8)) 0%,
    rgba(132, 0, 255, calc(var(--glow-intensity) * 0.4)) 30%,
    transparent 60%
  );
  border-radius: inherit;
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: subtract;
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  pointer-events: none;
  transition: opacity 0.3s ease;
  z-index: 3;
}

.card--border-glow:hover::after {
  opacity: 1;
}

.card--border-glow:hover {
  box-shadow: 0 4px 20px rgba(46, 24, 78, 0.4), 0 0 30px var(--purple-glow);
}

.particle-container {
  position: relative;
  overflow: hidden;
}

.particle::before {
  content: "";
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: rgba(132, 0, 255, 0.065);
  border-radius: 50%;
  z-index: -1;
}

.particle-container:hover {
  box-shadow: 0 4px 20px rgba(46, 24, 78, 0.2), 0 0 30px var(--purple-glow);
}

/* Global spotlight styles */
.global-spotlight {
  mix-blend-mode: screen;
  will-change: transform, opacity;
  z-index: 200 !important;
  pointer-events: none;
}

.bento-section {
  position: relative;
  user-select: none;
}
